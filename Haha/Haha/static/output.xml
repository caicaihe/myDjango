<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on darwin)" generated="20181113 17:28:18.107">
<suite id="s1" name="Devops" source="/Users/peter/mysource/mygithub/rf/compass/devops">
<suite id="s1-s1" name="测试用例" source="/Users/peter/mysource/mygithub/rf/compass/devops/测试用例">
<suite id="s1-s1-s1" name="API" source="/Users/peter/mysource/mygithub/rf/compass/devops/测试用例/API">
<suite id="s1-s1-s1-s1" name="API" source="/Users/peter/mysource/mygithub/rf/compass/devops/测试用例/API/API.txt">
<test id="s1-s1-s1-s1-t1" name="devops_持续交付_gitlab_golang流水线">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20181113 17:28:18.287" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20181113 17:28:18.287" endtime="20181113 17:28:18.288"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20181113 17:28:18.290" level="INFO">${kk} = c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:28:18.289" endtime="20181113 17:28:18.290"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20181113 17:28:18.291" level="INFO">${kkstr} = c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:28:18.290" endtime="20181113 17:28:18.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20181113 17:28:18.292" level="INFO">c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:28:18.291" endtime="20181113 17:28:18.292"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20181113 17:28:18.293" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'Yzk2YzA2YTExZWU2YjA0OWFlNGU3OGI4MTI3ZDUwMmIxMWI0ZTc2Ng=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20181113 17:28:18.292" endtime="20181113 17:28:18.293"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20181113 17:28:18.294" endtime="20181113 17:28:18.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20181113 17:28:18.295" level="INFO">c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:28:18.295" endtime="20181113 17:28:18.296"></status>
</kw>
<msg timestamp="20181113 17:28:18.296" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'c96c06a11ee6b049ae4e78b8127d502b11b4e766'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20181113 17:28:18.289" endtime="20181113 17:28:18.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='svn'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${workspaceJson_gitlab}</arg>
</arguments>
<status status="PASS" starttime="20181113 17:28:18.297" endtime="20181113 17:28:18.298"></status>
</kw>
<msg timestamp="20181113 17:28:18.298" level="INFO">${workspaceJson} = {"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.21.100:10081","password":"1Xiaowanzi"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuR...</msg>
<status status="PASS" starttime="20181113 17:28:18.296" endtime="20181113 17:28:18.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20181113 17:28:18.299" level="INFO">{"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.21.100:10081","password":"1Xiaowanzi"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"abcgitlab"}</msg>
<status status="PASS" starttime="20181113 17:28:18.298" endtime="20181113 17:28:18.299"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:28:18.300" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:28:18.299" endtime="20181113 17:28:18.300"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:28:18.301" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:28:18.300" endtime="20181113 17:28:18.301"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:28:20.310" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.21.100:10081","password":"1Xiaowanzi"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"abcgitlab"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:28:20.310" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:28:18.302" endtime="20181113 17:28:20.311"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:28:20.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:28:20.312" endtime="20181113 17:28:20.314"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:28:20.315" level="INFO">${content} = {'name': 'abcgitlab', 'alias': 'abcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.21.100:10081', 'username': 'peter', 'token'...</msg>
<status status="PASS" starttime="20181113 17:28:20.314" endtime="20181113 17:28:20.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:28:20.316" level="INFO">{'name': 'abcgitlab', 'alias': 'abcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.21.100:10081', 'username': 'peter', 'token': 'ElmVppLtjkOanh5RjA9muoc6jC7dIb62LakH3Utk3bls8MO3XGli4cGCaq4+ZJfWjTVcL16iVtRWQQ3Me7pNYTXuaPP4Y0a5Rts5q7DQUfI='}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'godevops_abcgitlab', 'host': 'cargo-regression-a.caicloudprivatetest.com'}, 'cacheDependencies': None, 'workerQuota': {}, 'creationTime': '2018-11-13T17:28:20+08:00', 'lastUpdateTime': '2018-11-13T17:28:20+08:00'}</msg>
<status status="PASS" starttime="20181113 17:28:20.316" endtime="20181113 17:28:20.317"></status>
</kw>
<status status="PASS" starttime="20181113 17:28:18.288" endtime="20181113 17:28:20.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建pipeline</arg>
</arguments>
<msg timestamp="20181113 17:28:20.318" level="INFO">devops_创建pipeline</msg>
<status status="PASS" starttime="20181113 17:28:20.317" endtime="20181113 17:28:20.318"></status>
</kw>
<kw name="devops_创建pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>golang</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_github}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:28:20.320" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:28:20.319" endtime="20181113 17:28:20.320"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:28:20.321" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:28:20.321" endtime="20181113 17:28:20.322"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>data=${pipelineJSON_${repo_type}_${codeSource}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:28:20.545" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines, data={"name":"abcgitlab","alias":"abcgitlab","description":"","build":{"buildInfo":{"buildTool":{},"cacheDependency":false},"builderImage":{"image":"cargo-regression-a.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7"},"stages":{"codeCheckout":{"mainRepo":{"type":"Gitlab","gitlab":{"ref":"refs/heads/master","url":"http://192.168.21.100:10081/peter/golangtest.git"}}},"package":{"command":["cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build"]},"imageBuild":{"buildInfos":[{"contextDir":".","dockerfile":"","dockerfilePath":"helloworld/Dockerfile","taskName":"imageBuild-be1rt","mark":"imageBuild-be1rt","imageName":"abcd"}]},"imageRelease":{"releasePolicies":[{"imageName":"abcd","type":"Always"}]}}}}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:28:20.545" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:28:20.322" endtime="20181113 17:28:20.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:28:20.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:28:20.546" endtime="20181113 17:28:20.547"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:28:20.547" level="INFO">${content} = {'id': '5bea9934af52920001aa0419', 'name': 'abcgitlab', 'alias': 'abcgitlab', 'owner': 'admin', 'projectID': '5bea9934af52920001aa0418', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'ima...</msg>
<status status="PASS" starttime="20181113 17:28:20.547" endtime="20181113 17:28:20.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:28:20.548" level="INFO">{'id': '5bea9934af52920001aa0419', 'name': 'abcgitlab', 'alias': 'abcgitlab', 'owner': 'admin', 'projectID': '5bea9934af52920001aa0418', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'cargo-regression-a.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'Gitlab', 'gitlab': {'url': 'http://192.168.21.100:10081/peter/golangtest.git', 'ref': 'refs/heads/master'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'helloworld/Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'creationTime': '2018-11-13T17:28:20.546648809+08:00', 'lastUpdateTime': '2018-11-13T17:28:20.546649077+08:00', 'annotations': {'tenant': 'godevops'}}</msg>
<status status="PASS" starttime="20181113 17:28:20.548" endtime="20181113 17:28:20.548"></status>
</kw>
<status status="PASS" starttime="20181113 17:28:20.319" endtime="20181113 17:28:20.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_执行pipeline</arg>
</arguments>
<msg timestamp="20181113 17:28:20.549" level="INFO">devops_执行pipeline</msg>
<status status="PASS" starttime="20181113 17:28:20.549" endtime="20181113 17:28:20.550"></status>
</kw>
<kw name="devops_执行pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:28:20.551" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:28:20.551" endtime="20181113 17:28:20.551"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:28:20.552" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:28:20.552" endtime="20181113 17:28:20.553"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>data=${recordJSON_${repo_type}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:28:21.129" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines/abcgitlab/records, data={"stages":["codeCheckout","package","imageBuild","imageRelease"],"workspace":"abcgitlab","pipeline":"abcgitlab","codeRef":{"type":"refs/heads/","name":"master"},"ref":"refs/heads/master","repoName":"caicaihe/golang","repoType":"github","tagType":"default","cacheDependency":false}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:28:21.129" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:28:20.553" endtime="20181113 17:28:21.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:28:21.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:28:21.130" endtime="20181113 17:28:21.131"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:28:21.132" level="INFO">${content} = {'id': '5bea9934af52920001aa041a', 'pipelineID': '5bea9934af52920001aa0419', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imag...</msg>
<status status="PASS" starttime="20181113 17:28:21.131" endtime="20181113 17:28:21.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:28:21.133" level="INFO">{'id': '5bea9934af52920001aa041a', 'pipelineID': '5bea9934af52920001aa0419', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pending', 'startTime': '2018-11-13T17:28:20.820258075+08:00', 'endTime': '0001-01-01T00:00:00Z'}</msg>
<status status="PASS" starttime="20181113 17:28:21.132" endtime="20181113 17:28:21.133"></status>
</kw>
<status status="PASS" starttime="20181113 17:28:20.550" endtime="20181113 17:28:21.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_pipeline执行结果</arg>
</arguments>
<msg timestamp="20181113 17:28:21.134" level="INFO">devops_pipeline执行结果</msg>
<status status="PASS" starttime="20181113 17:28:21.133" endtime="20181113 17:28:21.134"></status>
</kw>
<kw name="devops_pipeline执行结果_流水线执行完毕" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:29:21.136" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:28:21.136" endtime="20181113 17:29:21.137"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:29:21.140" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:29:21.139" endtime="20181113 17:29:21.140"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:29:21.141" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:29:21.140" endtime="20181113 17:29:21.141"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:29:21.422" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines/abcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:29:21.422" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:29:21.142" endtime="20181113 17:29:21.422"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:29:21.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:29:21.423" endtime="20181113 17:29:21.424"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:29:21.426" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea9934af52920001aa041a', 'name': 'dcf36b7-181113172828', 'pipelineID': '5bea9934af52920001aa0419', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:29:21.425" endtime="20181113 17:29:21.426"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:29:21.427" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:29:21.426" endtime="20181113 17:29:21.427"></status>
</kw>
<msg timestamp="20181113 17:29:21.427" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:29:21.137" endtime="20181113 17:29:21.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:29:21.428" endtime="20181113 17:29:21.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:29:21.429" endtime="20181113 17:29:21.429"></status>
</kw>
<status status="PASS" starttime="20181113 17:28:21.135" endtime="20181113 17:29:21.429"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:30:21.432" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:29:21.430" endtime="20181113 17:30:21.432"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:30:21.436" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:30:21.435" endtime="20181113 17:30:21.436"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:30:21.437" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:30:21.436" endtime="20181113 17:30:21.439"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:30:21.719" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines/abcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:30:21.720" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:30:21.439" endtime="20181113 17:30:21.720"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:30:21.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:30:21.721" endtime="20181113 17:30:21.722"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:30:21.723" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea9934af52920001aa041a', 'name': 'dcf36b7-181113172828', 'pipelineID': '5bea9934af52920001aa0419', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:30:21.722" endtime="20181113 17:30:21.723"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:30:21.724" level="INFO">${result} = Success</msg>
<status status="PASS" starttime="20181113 17:30:21.723" endtime="20181113 17:30:21.724"></status>
</kw>
<msg timestamp="20181113 17:30:21.725" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181113 17:30:21.433" endtime="20181113 17:30:21.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20181113 17:30:21.727" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20181113 17:30:21.726" endtime="20181113 17:30:21.727"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:21.726" endtime="20181113 17:30:21.727"></status>
</kw>
<status status="PASS" starttime="20181113 17:29:21.430" endtime="20181113 17:30:21.727"></status>
</kw>
<status status="PASS" starttime="20181113 17:28:21.135" endtime="20181113 17:30:21.728"></status>
</kw>
<msg timestamp="20181113 17:30:21.728" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181113 17:28:21.134" endtime="20181113 17:30:21.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>断言执行结果为success</arg>
</arguments>
<msg timestamp="20181113 17:30:21.729" level="INFO">断言执行结果为success</msg>
<status status="PASS" starttime="20181113 17:30:21.729" endtime="20181113 17:30:21.729"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<status status="PASS" starttime="20181113 17:30:21.730" endtime="20181113 17:30:21.731"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:21.730" endtime="20181113 17:30:21.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线组</arg>
</arguments>
<msg timestamp="20181113 17:30:21.731" level="INFO">删除流水线组</msg>
<status status="PASS" starttime="20181113 17:30:21.731" endtime="20181113 17:30:21.732"></status>
</kw>
<kw name="devops_删除workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:30:21.733" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:30:21.733" endtime="20181113 17:30:21.734"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:30:21.734" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:30:21.734" endtime="20181113 17:30:21.735"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces/${workspace}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:30:22.358" level="INFO">Delete Request using : alias=compass, uri=/v1/workspaces/abcgitlab, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, allow_redirects=True </msg>
<msg timestamp="20181113 17:30:22.359" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20181113 17:30:21.735" endtime="20181113 17:30:22.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20181113 17:30:22.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:30:22.359" endtime="20181113 17:30:22.361"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:21.732" endtime="20181113 17:30:22.361"></status>
</kw>
<status status="PASS" starttime="20181113 17:28:18.285" endtime="20181113 17:30:22.361" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="devops_持续交付_github_maven流水线">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20181113 17:30:22.366" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20181113 17:30:22.365" endtime="20181113 17:30:22.366"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>github</arg>
<arg>${workspaceName_github}</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20181113 17:30:22.368" level="INFO">${kk} = c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:30:22.368" endtime="20181113 17:30:22.369"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20181113 17:30:22.370" level="INFO">${kkstr} = c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:30:22.369" endtime="20181113 17:30:22.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20181113 17:30:22.370" level="INFO">c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:30:22.370" endtime="20181113 17:30:22.371"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20181113 17:30:22.372" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'Yzk2YzA2YTExZWU2YjA0OWFlNGU3OGI4MTI3ZDUwMmIxMWI0ZTc2Ng=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20181113 17:30:22.371" endtime="20181113 17:30:22.372"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20181113 17:30:22.372" endtime="20181113 17:30:22.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20181113 17:30:22.373" level="INFO">c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:30:22.373" endtime="20181113 17:30:22.374"></status>
</kw>
<msg timestamp="20181113 17:30:22.375" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'c96c06a11ee6b049ae4e78b8127d502b11b4e766'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20181113 17:30:22.367" endtime="20181113 17:30:22.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='svn'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${githubjson_token}</arg>
</arguments>
<status status="PASS" starttime="20181113 17:30:22.377" endtime="20181113 17:30:22.378"></status>
</kw>
<msg timestamp="20181113 17:30:22.378" level="INFO">${workspaceJson} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'c96c06a11ee6b049ae4e78b8127d502b11b4e766'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20181113 17:30:22.376" endtime="20181113 17:30:22.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20181113 17:30:22.379" level="INFO">{'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'c96c06a11ee6b049ae4e78b8127d502b11b4e766'}, 'cargo': {'projectType': 'default', 'name': 'default'}, 'GithubToken': 'false', 'GithubPassword': 'false', 'GitlabToken': 'false', 'GitlabPassword': 'false', 'workerQuota': {'cpuRequests': '0.5', 'cpuLimits': '1', 'memoryRequests': '1Gi', 'memoryLimits': '2Gi'}, 'alias': 'abcgithub'}</msg>
<status status="PASS" starttime="20181113 17:30:22.378" endtime="20181113 17:30:22.379"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:30:22.380" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:30:22.379" endtime="20181113 17:30:22.380"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:30:22.381" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:30:22.381" endtime="20181113 17:30:22.382"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:30:23.804" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm": {"type": "Github", "authType": "Token", "username": " ", "server": "https://github.com", "token": "c96c06a11ee6b049ae4e78b8127d502b11b4e766"}, "cargo": {"projectType": "default", "name": "default"}, "GithubToken": "false", "GithubPassword": "false", "GitlabToken": "false", "GitlabPassword": "false", "workerQuota": {"cpuRequests": "0.5", "cpuLimits": "1", "memoryRequests": "1Gi", "memoryLimits": "2Gi"}, "alias": "abcgithub"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:30:23.804" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:30:22.382" endtime="20181113 17:30:23.804"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:30:23.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:30:23.805" endtime="20181113 17:30:23.806"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:30:23.808" level="INFO">${content} = {'name': 'abcgithub', 'alias': 'abcgithub', 'description': '', 'owner': 'admin', 'scm': {'type': 'Github', 'authType': 'Token', 'server': 'https://github.com', 'username': ' ', 'token': 'm9xLocHeAYiY4...</msg>
<status status="PASS" starttime="20181113 17:30:23.807" endtime="20181113 17:30:23.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:30:23.809" level="INFO">{'name': 'abcgithub', 'alias': 'abcgithub', 'description': '', 'owner': 'admin', 'scm': {'type': 'Github', 'authType': 'Token', 'server': 'https://github.com', 'username': ' ', 'token': 'm9xLocHeAYiY4CC2xCgqZAdGR/WuwrUeFL1FPXvCKzWtmlDyjpnZhLvWbd6uPZ5nRnqonZp6xLw='}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'godevops_abcgithub', 'host': 'cargo-regression-a.caicloudprivatetest.com'}, 'cacheDependencies': None, 'workerQuota': {}, 'creationTime': '2018-11-13T17:30:23+08:00', 'lastUpdateTime': '2018-11-13T17:30:23+08:00'}</msg>
<status status="PASS" starttime="20181113 17:30:23.808" endtime="20181113 17:30:23.809"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:22.367" endtime="20181113 17:30:23.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建pipeline</arg>
</arguments>
<msg timestamp="20181113 17:30:23.811" level="INFO">devops_创建pipeline</msg>
<status status="PASS" starttime="20181113 17:30:23.810" endtime="20181113 17:30:23.811"></status>
</kw>
<kw name="devops_创建pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>github</arg>
<arg>maven</arg>
<arg>${workspaceName_github}</arg>
<arg>${pipelineName_github}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:30:23.813" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:30:23.812" endtime="20181113 17:30:23.813"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:30:23.814" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:30:23.814" endtime="20181113 17:30:23.815"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>data=${pipelineJSON_${repo_type}_${codeSource}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:30:24.098" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines, data={"name":"abcgithub","alias":"abcgithub","description":"","build":{"buildInfo":{"buildTool":{},"cacheDependency":false},"builderImage":{"image":"cargo-regression-a.caicloudprivatetest.com/library/maven:3.5.3-jdk-8-alpine"},"stages":{"codeCheckout":{"mainRepo":{"type":"Github","github":{"ref":"refs/heads/master","url":"https://github.com/caicaihe/maventest.git"}}},"package":{"command":["mvn clean install"]},"imageBuild":{"buildInfos":[{"contextDir":".","dockerfile":"","dockerfilePath":"Dockerfile","taskName":"imageBuild-be1rt","mark":"imageBuild-be1rt","imageName":"abc"}]},"imageRelease":{"releasePolicies":[{"imageName":"bac","type":"Always"}]}}}}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:30:24.101" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:30:23.816" endtime="20181113 17:30:24.101"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:30:24.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:30:24.101" endtime="20181113 17:30:24.102"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:30:24.103" level="INFO">${content} = {'id': '5bea99b0af52920001aa041c', 'name': 'abcgithub', 'alias': 'abcgithub', 'owner': 'admin', 'projectID': '5bea99afaf52920001aa041b', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'ima...</msg>
<status status="PASS" starttime="20181113 17:30:24.103" endtime="20181113 17:30:24.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:30:24.104" level="INFO">{'id': '5bea99b0af52920001aa041c', 'name': 'abcgithub', 'alias': 'abcgithub', 'owner': 'admin', 'projectID': '5bea99afaf52920001aa041b', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'cargo-regression-a.caicloudprivatetest.com/library/maven:3.5.3-jdk-8-alpine'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'Github', 'github': {'url': 'https://github.com/caicaihe/maventest.git', 'ref': 'refs/heads/master'}}}, 'package': {'command': ['mvn clean install']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'Dockerfile', 'imageName': 'abc'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'bac', 'type': 'Always'}]}}}, 'creationTime': '2018-11-13T17:30:24.103436087+08:00', 'lastUpdateTime': '2018-11-13T17:30:24.103436305+08:00', 'annotations': {'tenant': 'godevops'}}</msg>
<status status="PASS" starttime="20181113 17:30:24.104" endtime="20181113 17:30:24.105"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:23.811" endtime="20181113 17:30:24.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_执行pipeline</arg>
</arguments>
<msg timestamp="20181113 17:30:24.106" level="INFO">devops_执行pipeline</msg>
<status status="PASS" starttime="20181113 17:30:24.105" endtime="20181113 17:30:24.106"></status>
</kw>
<kw name="devops_执行pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>github</arg>
<arg>${workspaceName_github}</arg>
<arg>${pipelineName_github}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:30:24.107" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:30:24.107" endtime="20181113 17:30:24.108"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:30:24.109" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:30:24.108" endtime="20181113 17:30:24.109"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>data=${recordJSON_${repo_type}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:30:24.517" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, data={"stages":["codeCheckout","package","imageBuild","imageRelease"],"workspace":"abcgithub","pipeline":"abcgithub","codeRef":{"type":"refs/heads/","name":"master"},"ref":"refs/heads/master","repoName":"caicaihe/golang","repoType":"github","tagType":"default","cacheDependency":false}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:30:24.518" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:30:24.109" endtime="20181113 17:30:24.518"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:30:24.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:30:24.519" endtime="20181113 17:30:24.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:30:24.521" level="INFO">${content} = {'id': '5bea99b0af52920001aa041d', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imag...</msg>
<status status="PASS" starttime="20181113 17:30:24.520" endtime="20181113 17:30:24.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:30:24.522" level="INFO">{'id': '5bea99b0af52920001aa041d', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pending', 'startTime': '2018-11-13T17:30:24.408123935+08:00', 'endTime': '0001-01-01T00:00:00Z'}</msg>
<status status="PASS" starttime="20181113 17:30:24.521" endtime="20181113 17:30:24.522"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:24.106" endtime="20181113 17:30:24.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_pipeline执行结果</arg>
</arguments>
<msg timestamp="20181113 17:30:24.523" level="INFO">devops_pipeline执行结果</msg>
<status status="PASS" starttime="20181113 17:30:24.522" endtime="20181113 17:30:24.523"></status>
</kw>
<kw name="devops_pipeline执行结果_流水线执行完毕" library="devopsAPI业务关键词">
<arguments>
<arg>github</arg>
<arg>${workspaceName_github}</arg>
<arg>${pipelineName_github}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:31:24.526" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:30:24.525" endtime="20181113 17:31:24.526"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:31:24.530" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:31:24.529" endtime="20181113 17:31:24.530"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:31:24.531" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:31:24.530" endtime="20181113 17:31:24.532"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:31:25.037" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:31:25.038" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:31:24.532" endtime="20181113 17:31:25.038"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:31:25.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:31:25.038" endtime="20181113 17:31:25.039"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:31:25.040" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:31:25.039" endtime="20181113 17:31:25.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:31:25.041" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:31:25.041" endtime="20181113 17:31:25.041"></status>
</kw>
<msg timestamp="20181113 17:31:25.042" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:31:24.527" endtime="20181113 17:31:25.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:31:25.042" endtime="20181113 17:31:25.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:31:25.043" endtime="20181113 17:31:25.043"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:24.525" endtime="20181113 17:31:25.044"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:32:25.050" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:31:25.044" endtime="20181113 17:32:25.056"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:32:25.066" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:32:25.064" endtime="20181113 17:32:25.066"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:32:25.067" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:32:25.066" endtime="20181113 17:32:25.070"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:32:25.409" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:32:25.409" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:32:25.070" endtime="20181113 17:32:25.410"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:32:25.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:32:25.410" endtime="20181113 17:32:25.412"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:32:25.413" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:32:25.412" endtime="20181113 17:32:25.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:32:25.416" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:32:25.415" endtime="20181113 17:32:25.416"></status>
</kw>
<msg timestamp="20181113 17:32:25.417" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:32:25.060" endtime="20181113 17:32:25.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:32:25.418" endtime="20181113 17:32:25.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:32:25.419" endtime="20181113 17:32:25.420"></status>
</kw>
<status status="PASS" starttime="20181113 17:31:25.044" endtime="20181113 17:32:25.421"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:33:25.423" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:32:25.423" endtime="20181113 17:33:25.424"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:33:25.428" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:33:25.427" endtime="20181113 17:33:25.428"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:33:25.429" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:33:25.428" endtime="20181113 17:33:25.429"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:33:25.697" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:33:25.697" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:33:25.429" endtime="20181113 17:33:25.698"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:33:25.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:33:25.698" endtime="20181113 17:33:25.699"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:33:25.700" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:33:25.700" endtime="20181113 17:33:25.700"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:33:25.701" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:33:25.701" endtime="20181113 17:33:25.701"></status>
</kw>
<msg timestamp="20181113 17:33:25.702" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:33:25.425" endtime="20181113 17:33:25.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:33:25.702" endtime="20181113 17:33:25.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:33:25.703" endtime="20181113 17:33:25.704"></status>
</kw>
<status status="PASS" starttime="20181113 17:32:25.422" endtime="20181113 17:33:25.704"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:34:25.707" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:33:25.705" endtime="20181113 17:34:25.707"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:34:25.711" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:34:25.710" endtime="20181113 17:34:25.711"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:34:25.712" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:34:25.711" endtime="20181113 17:34:25.713"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:34:26.004" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:34:26.004" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:34:25.715" endtime="20181113 17:34:26.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:34:26.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:34:26.005" endtime="20181113 17:34:26.006"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:34:26.007" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:34:26.006" endtime="20181113 17:34:26.007"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:34:26.008" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:34:26.008" endtime="20181113 17:34:26.008"></status>
</kw>
<msg timestamp="20181113 17:34:26.009" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:34:25.708" endtime="20181113 17:34:26.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:34:26.009" endtime="20181113 17:34:26.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:34:26.010" endtime="20181113 17:34:26.011"></status>
</kw>
<status status="PASS" starttime="20181113 17:33:25.705" endtime="20181113 17:34:26.011"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:35:26.013" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:34:26.011" endtime="20181113 17:35:26.014"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:35:26.018" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:35:26.017" endtime="20181113 17:35:26.018"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:35:26.019" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:35:26.019" endtime="20181113 17:35:26.020"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:35:26.309" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:35:26.309" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:35:26.020" endtime="20181113 17:35:26.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:35:26.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:35:26.310" endtime="20181113 17:35:26.311"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:35:26.312" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:35:26.312" endtime="20181113 17:35:26.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:35:26.314" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:35:26.313" endtime="20181113 17:35:26.314"></status>
</kw>
<msg timestamp="20181113 17:35:26.315" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:35:26.014" endtime="20181113 17:35:26.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:35:26.315" endtime="20181113 17:35:26.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:35:26.316" endtime="20181113 17:35:26.316"></status>
</kw>
<status status="PASS" starttime="20181113 17:34:26.011" endtime="20181113 17:35:26.317"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:36:26.320" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:35:26.319" endtime="20181113 17:36:26.320"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:36:26.323" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:36:26.322" endtime="20181113 17:36:26.324"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:36:26.325" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:36:26.324" endtime="20181113 17:36:26.325"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:36:26.604" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:36:26.604" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:36:26.326" endtime="20181113 17:36:26.604"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:36:26.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:36:26.605" endtime="20181113 17:36:26.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:36:26.608" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:36:26.607" endtime="20181113 17:36:26.608"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:36:26.609" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:36:26.608" endtime="20181113 17:36:26.609"></status>
</kw>
<msg timestamp="20181113 17:36:26.609" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:36:26.321" endtime="20181113 17:36:26.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:36:26.610" endtime="20181113 17:36:26.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:36:26.611" endtime="20181113 17:36:26.611"></status>
</kw>
<status status="PASS" starttime="20181113 17:35:26.317" endtime="20181113 17:36:26.612"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:37:26.613" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:36:26.612" endtime="20181113 17:37:26.614"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:37:26.617" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:37:26.616" endtime="20181113 17:37:26.617"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:37:26.618" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:37:26.617" endtime="20181113 17:37:26.619"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:37:26.851" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:37:26.851" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:37:26.619" endtime="20181113 17:37:26.851"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:37:26.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:37:26.852" endtime="20181113 17:37:26.853"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:37:26.856" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:37:26.853" endtime="20181113 17:37:26.857"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:37:26.858" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:37:26.857" endtime="20181113 17:37:26.858"></status>
</kw>
<msg timestamp="20181113 17:37:26.858" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:37:26.615" endtime="20181113 17:37:26.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:37:26.859" endtime="20181113 17:37:26.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:37:26.859" endtime="20181113 17:37:26.860"></status>
</kw>
<status status="PASS" starttime="20181113 17:36:26.612" endtime="20181113 17:37:26.860"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:38:26.861" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:37:26.861" endtime="20181113 17:38:26.862"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:38:26.865" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:38:26.864" endtime="20181113 17:38:26.865"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:38:26.866" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:38:26.866" endtime="20181113 17:38:26.867"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:38:27.146" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgithub/pipelines/abcgithub/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:38:27.147" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:38:26.867" endtime="20181113 17:38:27.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:38:27.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:38:27.148" endtime="20181113 17:38:27.149"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:38:27.150" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea99b0af52920001aa041d', 'name': '285a131-181113173032', 'pipelineID': '5bea99b0af52920001aa041c', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181113 17:38:27.149" endtime="20181113 17:38:27.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:38:27.152" level="INFO">${result} = Success</msg>
<status status="PASS" starttime="20181113 17:38:27.151" endtime="20181113 17:38:27.152"></status>
</kw>
<msg timestamp="20181113 17:38:27.153" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181113 17:38:26.863" endtime="20181113 17:38:27.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20181113 17:38:27.154" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20181113 17:38:27.154" endtime="20181113 17:38:27.155"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:27.153" endtime="20181113 17:38:27.155"></status>
</kw>
<status status="PASS" starttime="20181113 17:37:26.860" endtime="20181113 17:38:27.155"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:24.524" endtime="20181113 17:38:27.156"></status>
</kw>
<msg timestamp="20181113 17:38:27.156" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181113 17:30:24.523" endtime="20181113 17:38:27.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>断言执行结果为success</arg>
</arguments>
<msg timestamp="20181113 17:38:27.157" level="INFO">断言执行结果为success</msg>
<status status="PASS" starttime="20181113 17:38:27.157" endtime="20181113 17:38:27.157"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<status status="PASS" starttime="20181113 17:38:27.158" endtime="20181113 17:38:27.159"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:27.158" endtime="20181113 17:38:27.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线组</arg>
</arguments>
<msg timestamp="20181113 17:38:27.161" level="INFO">删除流水线组</msg>
<status status="PASS" starttime="20181113 17:38:27.159" endtime="20181113 17:38:27.161"></status>
</kw>
<kw name="devops_删除workspace" library="devopsAPI业务关键词">
<arguments>
<arg>github</arg>
<arg>${workspaceName_github}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:38:27.163" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:38:27.162" endtime="20181113 17:38:27.163"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:38:27.164" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:38:27.164" endtime="20181113 17:38:27.165"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces/${workspace}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:38:27.753" level="INFO">Delete Request using : alias=compass, uri=/v1/workspaces/abcgithub, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, allow_redirects=True </msg>
<msg timestamp="20181113 17:38:27.754" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20181113 17:38:27.165" endtime="20181113 17:38:27.754"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20181113 17:38:27.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:38:27.754" endtime="20181113 17:38:27.756"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:27.162" endtime="20181113 17:38:27.756"></status>
</kw>
<status status="PASS" starttime="20181113 17:30:22.362" endtime="20181113 17:38:27.757" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t3" name="devops_持续交付_svn_maven流水线">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20181113 17:38:27.761" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20181113 17:38:27.760" endtime="20181113 17:38:27.761"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20181113 17:38:27.763" level="INFO">${kk} = c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:38:27.762" endtime="20181113 17:38:27.763"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20181113 17:38:27.764" level="INFO">${kkstr} = c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:38:27.764" endtime="20181113 17:38:27.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20181113 17:38:27.765" level="INFO">c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:38:27.765" endtime="20181113 17:38:27.765"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20181113 17:38:27.766" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'Yzk2YzA2YTExZWU2YjA0OWFlNGU3OGI4MTI3ZDUwMmIxMWI0ZTc2Ng=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20181113 17:38:27.766" endtime="20181113 17:38:27.767"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20181113 17:38:27.767" endtime="20181113 17:38:27.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20181113 17:38:27.769" level="INFO">c96c06a11ee6b049ae4e78b8127d502b11b4e766</msg>
<status status="PASS" starttime="20181113 17:38:27.769" endtime="20181113 17:38:27.770"></status>
</kw>
<msg timestamp="20181113 17:38:27.770" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'c96c06a11ee6b049ae4e78b8127d502b11b4e766'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20181113 17:38:27.762" endtime="20181113 17:38:27.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='svn'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<status status="PASS" starttime="20181113 17:38:27.772" endtime="20181113 17:38:27.772"></status>
</kw>
<msg timestamp="20181113 17:38:27.773" level="INFO">${workspaceJson} = {"scm":{"type":"SVN","authType":"Password","username":"user001","server":"https://192.168.130.29/svn/","password":"123456"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuReques...</msg>
<status status="PASS" starttime="20181113 17:38:27.771" endtime="20181113 17:38:27.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20181113 17:38:27.774" level="INFO">{"scm":{"type":"SVN","authType":"Password","username":"user001","server":"https://192.168.130.29/svn/","password":"123456"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"abcsvn"}</msg>
<status status="PASS" starttime="20181113 17:38:27.774" endtime="20181113 17:38:27.774"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:38:27.775" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:38:27.775" endtime="20181113 17:38:27.775"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:38:27.776" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:38:27.776" endtime="20181113 17:38:27.777"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:38:28.033" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm":{"type":"SVN","authType":"Password","username":"user001","server":"https://192.168.130.29/svn/","password":"123456"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"abcsvn"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:38:28.033" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:38:27.777" endtime="20181113 17:38:28.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:38:28.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:38:28.034" endtime="20181113 17:38:28.035"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:38:28.036" level="INFO">${content} = {'name': 'abcsvn', 'alias': 'abcsvn', 'description': '', 'owner': 'admin', 'scm': {'type': 'SVN', 'authType': 'Password', 'server': 'https://192.168.130.29/svn/', 'username': 'user001', 'token': 'OBVZ...</msg>
<status status="PASS" starttime="20181113 17:38:28.035" endtime="20181113 17:38:28.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:38:28.037" level="INFO">{'name': 'abcsvn', 'alias': 'abcsvn', 'description': '', 'owner': 'admin', 'scm': {'type': 'SVN', 'authType': 'Password', 'server': 'https://192.168.130.29/svn/', 'username': 'user001', 'token': 'OBVZcXT5bymuTtq/Tb5mw5eXang/y215rn3FgDv8'}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'godevops_abcsvn', 'host': 'cargo-regression-a.caicloudprivatetest.com'}, 'cacheDependencies': None, 'workerQuota': {}, 'creationTime': '2018-11-13T17:38:28+08:00', 'lastUpdateTime': '2018-11-13T17:38:28+08:00'}</msg>
<status status="PASS" starttime="20181113 17:38:28.037" endtime="20181113 17:38:28.037"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:27.761" endtime="20181113 17:38:28.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建pipeline</arg>
</arguments>
<msg timestamp="20181113 17:38:28.039" level="INFO">devops_创建pipeline</msg>
<status status="PASS" starttime="20181113 17:38:28.038" endtime="20181113 17:38:28.039"></status>
</kw>
<kw name="devops_创建pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>golang</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:38:28.040" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:38:28.040" endtime="20181113 17:38:28.041"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:38:28.042" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:38:28.041" endtime="20181113 17:38:28.043"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>data=${pipelineJSON_${repo_type}_${codeSource}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:38:28.247" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcsvn/pipelines, data={"name":"abcsvn","alias":"abcsvn","description":"","build":{"buildInfo":{"buildTool":{},"cacheDependency":false},"builderImage":{"image":"cargo-regression-a.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7"},"stages":{"codeCheckout":{"mainRepo":{"type":"SVN","svn":{"ref":"","url":"https://192.168.130.29/svn/repo1/"}}},"package":{"command":["cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build"]},"imageBuild":{"buildInfos":[{"contextDir":".","dockerfile":"","dockerfilePath":"helloworld/Dockerfile","taskName":"imageBuild-be1rt","mark":"imageBuild-be1rt","imageName":"abcd"}]},"imageRelease":{"releasePolicies":[{"imageName":"abcd","type":"Always"}]}}}}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:38:28.248" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:38:28.043" endtime="20181113 17:38:28.248"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:38:28.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:38:28.248" endtime="20181113 17:38:28.249"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:38:28.251" level="INFO">${content} = {'id': '5bea9b94af52920001aa041f', 'name': 'abcsvn', 'alias': 'abcsvn', 'owner': 'admin', 'projectID': '5bea9b94af52920001aa041e', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': '...</msg>
<status status="PASS" starttime="20181113 17:38:28.250" endtime="20181113 17:38:28.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:38:28.252" level="INFO">{'id': '5bea9b94af52920001aa041f', 'name': 'abcsvn', 'alias': 'abcsvn', 'owner': 'admin', 'projectID': '5bea9b94af52920001aa041e', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'cargo-regression-a.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'SVN', 'svn': {'url': 'https://192.168.130.29/svn/repo1/'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'helloworld/Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'creationTime': '2018-11-13T17:38:28.247482867+08:00', 'lastUpdateTime': '2018-11-13T17:38:28.247483049+08:00', 'annotations': {'tenant': 'godevops'}}</msg>
<status status="PASS" starttime="20181113 17:38:28.252" endtime="20181113 17:38:28.253"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:28.039" endtime="20181113 17:38:28.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_执行pipeline</arg>
</arguments>
<msg timestamp="20181113 17:38:28.253" level="INFO">devops_执行pipeline</msg>
<status status="PASS" starttime="20181113 17:38:28.253" endtime="20181113 17:38:28.254"></status>
</kw>
<kw name="devops_执行pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:38:28.255" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:38:28.255" endtime="20181113 17:38:28.256"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:38:28.257" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:38:28.256" endtime="20181113 17:38:28.257"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>data=${recordJSON_${repo_type}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:38:28.777" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcsvn/pipelines/abcsvn/records, data={"stages":["codeCheckout","package","imageBuild","imageRelease"],"workspace":"abcsvn","pipeline":"abcsvn","codeRef":{"type":"https://192.168.130.29/svn/repo1/"},"repoName":"","repoType":"svn","tagType":"default","cacheDependency":false}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181113 17:38:28.778" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181113 17:38:28.257" endtime="20181113 17:38:28.778"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181113 17:38:28.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:38:28.778" endtime="20181113 17:38:28.779"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:38:28.780" level="INFO">${content} = {'id': '5bea9b94af52920001aa0420', 'pipelineID': '5bea9b94af52920001aa041f', 'trigger': 'admin', 'performParams': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pend...</msg>
<status status="PASS" starttime="20181113 17:38:28.780" endtime="20181113 17:38:28.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181113 17:38:28.781" level="INFO">{'id': '5bea9b94af52920001aa0420', 'pipelineID': '5bea9b94af52920001aa041f', 'trigger': 'admin', 'performParams': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pending', 'startTime': '2018-11-13T17:38:28.528743413+08:00', 'endTime': '0001-01-01T00:00:00Z'}</msg>
<status status="PASS" starttime="20181113 17:38:28.781" endtime="20181113 17:38:28.781"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:28.254" endtime="20181113 17:38:28.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_pipeline执行结果</arg>
</arguments>
<msg timestamp="20181113 17:38:28.782" level="INFO">devops_pipeline执行结果</msg>
<status status="PASS" starttime="20181113 17:38:28.782" endtime="20181113 17:38:28.783"></status>
</kw>
<kw name="devops_pipeline执行结果_流水线执行完毕" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:39:28.787" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:38:28.785" endtime="20181113 17:39:28.787"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:39:28.792" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:39:28.790" endtime="20181113 17:39:28.792"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:39:28.795" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:39:28.794" endtime="20181113 17:39:28.795"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:39:29.398" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcsvn/pipelines/abcsvn/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:39:29.399" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:39:28.796" endtime="20181113 17:39:29.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:39:29.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:39:29.399" endtime="20181113 17:39:29.400"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:39:29.401" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea9b94af52920001aa0420', 'name': '3-181113173836', 'pipelineID': '5bea9b94af52920001aa041f', 'trigger': 'admin', 'performParams': {'stages': ['codeChecko...</msg>
<status status="PASS" starttime="20181113 17:39:29.401" endtime="20181113 17:39:29.401"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:39:29.402" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181113 17:39:29.402" endtime="20181113 17:39:29.402"></status>
</kw>
<msg timestamp="20181113 17:39:29.403" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181113 17:39:28.788" endtime="20181113 17:39:29.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:39:29.403" endtime="20181113 17:39:29.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181113 17:39:29.404" endtime="20181113 17:39:29.404"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:28.784" endtime="20181113 17:39:29.405"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181113 17:40:29.406" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181113 17:39:29.405" endtime="20181113 17:40:29.407"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:40:29.409" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:40:29.409" endtime="20181113 17:40:29.409"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:40:29.410" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:40:29.410" endtime="20181113 17:40:29.411"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:40:29.712" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcsvn/pipelines/abcsvn/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181113 17:40:29.713" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181113 17:40:29.411" endtime="20181113 17:40:29.713"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181113 17:40:29.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:40:29.714" endtime="20181113 17:40:29.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181113 17:40:29.717" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bea9b94af52920001aa0420', 'name': '3-181113173836', 'pipelineID': '5bea9b94af52920001aa041f', 'trigger': 'admin', 'performParams': {'stages': ['codeChecko...</msg>
<status status="PASS" starttime="20181113 17:40:29.716" endtime="20181113 17:40:29.717"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181113 17:40:29.718" level="INFO">${result} = Success</msg>
<status status="PASS" starttime="20181113 17:40:29.717" endtime="20181113 17:40:29.718"></status>
</kw>
<msg timestamp="20181113 17:40:29.719" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181113 17:40:29.408" endtime="20181113 17:40:29.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20181113 17:40:29.720" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20181113 17:40:29.720" endtime="20181113 17:40:29.720"></status>
</kw>
<status status="PASS" starttime="20181113 17:40:29.719" endtime="20181113 17:40:29.720"></status>
</kw>
<status status="PASS" starttime="20181113 17:39:29.405" endtime="20181113 17:40:29.721"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:28.784" endtime="20181113 17:40:29.721"></status>
</kw>
<msg timestamp="20181113 17:40:29.721" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181113 17:38:28.783" endtime="20181113 17:40:29.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>断言执行结果为success</arg>
</arguments>
<msg timestamp="20181113 17:40:29.722" level="INFO">断言执行结果为success</msg>
<status status="PASS" starttime="20181113 17:40:29.722" endtime="20181113 17:40:29.722"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<status status="PASS" starttime="20181113 17:40:29.723" endtime="20181113 17:40:29.724"></status>
</kw>
<status status="PASS" starttime="20181113 17:40:29.723" endtime="20181113 17:40:29.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线组</arg>
</arguments>
<msg timestamp="20181113 17:40:29.725" level="INFO">删除流水线组</msg>
<status status="PASS" starttime="20181113 17:40:29.724" endtime="20181113 17:40:29.725"></status>
</kw>
<kw name="devops_删除workspace" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181113 17:40:29.726" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181113 17:40:29.726" endtime="20181113 17:40:29.727"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181113 17:40:29.727" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181113 17:40:29.727" endtime="20181113 17:40:29.728"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces/${workspace}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181113 17:40:30.429" level="INFO">Delete Request using : alias=compass, uri=/v1/workspaces/abcsvn, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, allow_redirects=True </msg>
<msg timestamp="20181113 17:40:30.429" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20181113 17:40:29.728" endtime="20181113 17:40:30.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20181113 17:40:30.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181113 17:40:30.430" endtime="20181113 17:40:30.431"></status>
</kw>
<status status="PASS" starttime="20181113 17:40:29.725" endtime="20181113 17:40:30.431"></status>
</kw>
<status status="PASS" starttime="20181113 17:38:27.758" endtime="20181113 17:40:30.431" critical="yes"></status>
</test>
<status status="PASS" starttime="20181113 17:28:18.170" endtime="20181113 17:40:30.432"></status>
</suite>
<status status="PASS" starttime="20181113 17:28:18.166" endtime="20181113 17:40:30.437"></status>
</suite>
<status status="PASS" starttime="20181113 17:28:18.163" endtime="20181113 17:40:30.440"></status>
</suite>
<status status="PASS" starttime="20181113 17:28:18.132" endtime="20181113 17:40:30.445"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Devops">Devops</stat>
<stat pass="3" fail="0" id="s1-s1" name="测试用例">Devops.测试用例</stat>
<stat pass="3" fail="0" id="s1-s1-s1" name="API">Devops.测试用例.API</stat>
<stat pass="3" fail="0" id="s1-s1-s1-s1" name="API">Devops.测试用例.API.API</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
